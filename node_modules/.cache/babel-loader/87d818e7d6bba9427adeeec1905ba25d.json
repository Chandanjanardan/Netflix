{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/kittu/react/movie/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/kittu/react/movie/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/kittu/react/movie/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import YouTube from'react-youtube';import axios from'./axios';import\"./Row.css\";import movieTrailer from\"movie-trailer\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var base_url=\"http://image.tmdb.org/t/p/w154\";function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl,isLargeRow=_ref.isLargeRow;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),trailerUrl=_useState4[0],setTrailerUrl=_useState4[1];useEffect(function(){// whne this row loads this piece of code run\nfunction fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:request=_context.sent;setMovies(request.data.results);// above line put movie in srt movie and .data.results come from console\nreturn _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[fetchUrl]);// fetch url is outside so every times its change it will re render it.\nvar opts={height:\"390\",width:\"100%\",playerVars:{// https://developers.google.com/youtube/player_parameters\nautoplay:1}};var handleClick=function handleClick(movie){if(trailerUrl){setTrailerUrl(\"\");}else{movieTrailer((movie===null||movie===void 0?void 0:movie.name)||\"\").then(function(url){// https://www.youtube.com/watch?v=VpmocE57-5I this code extract last part\nvar urlParams=new URL(\"https://www.youtube.com/watch?v=VpmocE57-5I\");setTrailerUrl(urlParams);}).catch(function(error){return console.log(error);});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row__posters\",children:movies.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return handleClick(movie);},className:\"row__poster \".concat(isLargeRow&&\"row__posterLarge\"),src:\"\".concat(base_url).concat(isLargeRow?movie.poster_path:movie.backdrop_path),alt:movie.name},movie.id);})}),trailerUrl&&/*#__PURE__*/_jsx(YouTube,{videoId:trailerUrl,opts:opts})]});}export default Row;","map":{"version":3,"sources":["C:/Users/kittu/react/movie/src/Row.js"],"names":["React","useState","useEffect","YouTube","axios","movieTrailer","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","get","request","data","results","opts","height","width","playerVars","autoplay","handleClick","movie","name","then","url","urlParams","URL","catch","error","console","log","map","poster_path","backdrop_path","id"],"mappings":"gbAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAwBC,SAAxB,KAAuC,OAAvC,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,YAAP,KAA0B,eAA1B,C,wFAKA,GAAMC,CAAAA,QAAQ,CAAE,gCAAhB,CAGA,QAASC,CAAAA,GAAT,MAA0C,IAA5BC,CAAAA,KAA4B,MAA5BA,KAA4B,CAAtBC,QAAsB,MAAtBA,QAAsB,CAAbC,UAAa,MAAbA,UAAa,eACbT,QAAQ,CAAC,EAAD,CADK,wCAC/BU,MAD+B,eACxBC,SADwB,8BAENX,QAAQ,CAAC,EAAD,CAFF,yCAEhCY,UAFgC,eAErBC,aAFqB,eAGtCZ,SAAS,CAAC,UAAI,CACV;AADU,QAEKa,CAAAA,SAFL,qIAEV,qKACyBX,CAAAA,KAAK,CAACY,GAAN,CAAUP,QAAV,CADzB,QACUQ,OADV,eAGIL,SAAS,CAACK,OAAO,CAACC,IAAR,CAAaC,OAAd,CAAT,CACA;AAJJ,gCAKWF,OALX,wDAFU,4CAUVF,SAAS,GAEZ,CAZQ,CAYP,CAACN,QAAD,CAZO,CAAT,CAaA;AACA,GAAMW,CAAAA,IAAI,CAAC,CAACC,MAAM,CAAC,KAAR,CACPC,KAAK,CAAC,MADC,CAEHC,UAAU,CAAE,CAChB;AACAC,QAAQ,CAAE,CAFM,CAFT,CAAX,CAMJ,GAAMC,CAAAA,WAAW,CAAC,QAAZA,CAAAA,WAAY,CAACC,KAAD,CAAS,CACvB,GAAGb,UAAH,CAAc,CACVC,aAAa,CAAC,EAAD,CAAb,CACH,CAFD,IAEK,CACDT,YAAY,CAAC,CAAAqB,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAEC,IAAP,GAAe,EAAhB,CAAZ,CACCC,IADD,CACM,SAACC,GAAD,CAAO,CACT;AACA,GAAMC,CAAAA,SAAS,CAAE,GAAIC,CAAAA,GAAJ,CAAQ,6CAAR,CAAjB,CACAjB,aAAa,CAACgB,SAAD,CAAb,CAEH,CAND,EAMGE,KANH,CAMS,SAACC,KAAD,QAASC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAT,EANT,EAOH,CACJ,CAZD,CAeI,mBACI,aAAK,SAAS,CAAC,KAAf,wBACI,oBAAKzB,KAAL,EADJ,cAII,YAAK,SAAS,CAAC,cAAf,UACKG,MAAM,CAACyB,GAAP,CAAW,SAAAV,KAAK,qBACb,YAEA,OAAO,CAAE,yBAAID,CAAAA,WAAW,CAACC,KAAD,CAAf,EAFT,CAGA,SAAS,uBAAiBhB,UAAU,EAAI,kBAA/B,CAHT,CAIA,GAAG,WAAKJ,QAAL,SAAgBI,UAAU,CAAEgB,KAAK,CAACW,WAAR,CAAqBX,KAAK,CAACY,aAArD,CAJH,CAIyE,GAAG,CAAEZ,KAAK,CAACC,IAJpF,EACKD,KAAK,CAACa,EADX,CADa,EAAhB,CADL,EAJJ,CAaI1B,UAAU,eAAG,KAAC,OAAD,EAAS,OAAO,CAAEA,UAAlB,CAA8B,IAAI,CAAEO,IAApC,EAbjB,GADJ,CAiBH,CAED,cAAeb,CAAAA,GAAf","sourcesContent":["import React ,{useState,useEffect}from 'react'\r\nimport YouTube from 'react-youtube';\r\nimport axios from './axios';\r\nimport \"./Row.css\";\r\nimport movieTrailer from  \"movie-trailer\";\r\n\r\n\r\n\r\n\r\nconst base_url= \"http://image.tmdb.org/t/p/w154\"\r\n\r\n\r\nfunction Row({title,fetchUrl,isLargeRow}) {\r\n    const [movies,setMovies]=useState([]);\r\n    const[trailerUrl,setTrailerUrl]=useState(\"\");\r\n    useEffect(()=>{\r\n        // whne this row loads this piece of code run\r\n        async function fetchData(){\r\n            const request =await axios.get(fetchUrl);\r\n            \r\n            setMovies(request.data.results);\r\n            // above line put movie in srt movie and .data.results come from console\r\n            return request;\r\n\r\n        }\r\n        fetchData();\r\n\r\n    },[fetchUrl]);\r\n    // fetch url is outside so every times its change it will re render it.\r\n    const opts={height:\"390\",\r\n        width:\"100%\",\r\n            playerVars: {\r\n        // https://developers.google.com/youtube/player_parameters\r\n        autoplay: 1,},\r\n}\r\nconst handleClick=(movie)=>{\r\n    if(trailerUrl){\r\n        setTrailerUrl(\"\");\r\n    }else{\r\n        movieTrailer(movie?.name || \"\")\r\n        .then((url)=>{\r\n            // https://www.youtube.com/watch?v=VpmocE57-5I this code extract last part\r\n            const urlParams= new URL(\"https://www.youtube.com/watch?v=VpmocE57-5I\");\r\n            setTrailerUrl(urlParams)\r\n\r\n        }).catch((error)=>console.log(error));\r\n    }\r\n}\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n\r\n\r\n            <div className=\"row__posters\">\r\n                {movies.map(movie=> (\r\n                    <img \r\n                    key={movie.id}\r\n                    onClick={()=>handleClick(movie)}\r\n                    className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                    src={`${base_url}${isLargeRow ?movie.poster_path :movie.backdrop_path}`} alt={movie.name}/>\r\n                ))}\r\n            </div>\r\n           {trailerUrl &&<YouTube videoId={trailerUrl} opts={opts}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n"]},"metadata":{},"sourceType":"module"}